<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>prebuilt | Academic</title>
    <link>https://www.kanekotic.com/tag/prebuilt/</link>
      <atom:link href="https://www.kanekotic.com/tag/prebuilt/index.xml" rel="self" type="application/rss+xml" />
    <description>prebuilt</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><lastBuildDate>Thu, 29 Jun 2017 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://www.kanekotic.com/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>prebuilt</title>
      <link>https://www.kanekotic.com/tag/prebuilt/</link>
    </image>
    
    <item>
      <title>Any Prebuilt</title>
      <link>https://www.kanekotic.com/project/any-prebuild/</link>
      <pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://www.kanekotic.com/project/any-prebuild/</guid>
      <description>&lt;h1 id=&#34;logomakr_3dkn9bhttpscloudgithubusercontentcomassets307120822477192c7ce1d86-e7aa-11e6-87de-c24336e1ea3epng&#34;&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/3071208/22477192/c7ce1d86-e7aa-11e6-87de-c24336e1ea3e.png&#34; alt=&#34;logomakr_3dkn9b&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;mission&#34;&gt;Mission&lt;/h1&gt;
&lt;p&gt;Easy generation or integration of prebuilt packages. It helps fetchs prebuilt binaries from github releases.&lt;/p&gt;
&lt;h1 id=&#34;generate-a-prebuilt-package&#34;&gt;Generate a prebuilt package&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Create new project&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Add this package as dependency&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;npm install any-prebuilt --save
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Create &lt;code&gt;postinstall.js&lt;/code&gt; file with content:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;require(&#39;any-prebuilt&#39;).install(require(&#39;./package.json&#39;).prebuilt)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Create &lt;code&gt;index.js&lt;/code&gt; file with content:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var anyPrebuilt = require(&#39;any-prebuilt&#39;)
anyPrebuilt.initialize(__dirname, require(&#39;./package.json&#39;).prebuilt)
module.exports.path = anyPrebuilt.path
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;On the &lt;code&gt;package.json&lt;/code&gt; add a prebuilt element (you can also add this to any other file that provides a jason object to both index and postinstall.js).&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;  &amp;quot;prebuilt&amp;quot;: {
    &amp;quot;arch&amp;quot;: &amp;lt;string&amp;gt;, // Target architecture (supported: `ia32` / `x64`. Default value: machine&#39;s architecture)
    &amp;quot;platform&amp;quot;: &amp;lt;string&amp;gt;, //Target platform (supported: `win` / `osx` / `linux`. Default value: machine&#39;s platform)
    &amp;quot;version&amp;quot;: &amp;lt;string&amp;gt;, //Target version (format: `vX.Y.Z`. Default value: latest)
    &amp;quot;targetDir&amp;quot;: &amp;lt;string&amp;gt;, //Target directory (where to install the binaries. Default value: `./bin`)
    &amp;quot;targetBin&amp;quot;: &amp;lt;string&amp;gt;, //Target binary (the precompiled binary to be required in node. No default value)
    &amp;quot;version&amp;quot;: &amp;lt;string&amp;gt;, //Target version (format: `vX.Y.Z`. Default value: latest)
    &amp;quot;user&amp;quot;: &amp;lt;string&amp;gt;, // user or Organization (format: string. Is `required`)
    &amp;quot;repo&amp;quot;: &amp;lt;string&amp;gt;, //Origin repo (format: string. Is `required`)
    &amp;quot;token&amp;quot;: &amp;lt;string&amp;gt; //Github token (format: string. `required` if private repo)
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;In your &lt;code&gt;package .json&lt;/code&gt; add the next script:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;scripts&amp;quot;: {
    &amp;quot;postinstall&amp;quot;: &amp;quot;node postinstall.js&amp;quot;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As seen before this can be configured using a json object but also can be configured or overrided using the next enviroment variables &lt;code&gt;PREBUILT_ARCH&lt;/code&gt;, &lt;code&gt;PREBUILT_PLATFORM&lt;/code&gt;, &lt;code&gt;PREBUILT_VERSION&lt;/code&gt;, &lt;code&gt;PREBUILT_BINARY&lt;/code&gt;, &lt;code&gt;PREBUILT_TOKEN&lt;/code&gt;, &lt;code&gt;PREBUILT_REPO&lt;/code&gt;, &lt;code&gt;PREBUILT_USER&lt;/code&gt; and &lt;code&gt;PREBUILT_TARGET_DIR&lt;/code&gt; environment variables.&lt;/p&gt;
&lt;h3 id=&#34;special-thanks&#34;&gt;Special thanks&lt;/h3&gt;
&lt;p&gt;to all the contributors to 
&lt;a href=&#34;https://github.com/Ivshti/wcjs-prebuilt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wcjs-prebuilt&lt;/a&gt; that this package is based on.&lt;/p&gt;
&lt;h3 id=&#34;logo&#34;&gt;Logo&lt;/h3&gt;
&lt;p&gt;Hours graphic by &lt;a href=&#34;http://www.flaticon.com/authors/freepik&#34;&gt;Freepik&lt;/a&gt; from &lt;a href=&#34;http://www.flaticon.com/&#34;&gt;Flaticon&lt;/a&gt; is licensed under &lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34; title=&#34;Creative Commons BY 3.0&#34;&gt;CC BY 3.0&lt;/a&gt;. Made with &lt;a href=&#34;http://logomakr.com&#34; title=&#34;Logo Maker&#34;&gt;Logo Maker&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
