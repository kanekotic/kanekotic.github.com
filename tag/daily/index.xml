<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>daily | Academic</title>
    <link>https://www.kanekotic.com/tag/daily/</link>
      <atom:link href="https://www.kanekotic.com/tag/daily/index.xml" rel="self" type="application/rss+xml" />
    <description>daily</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><lastBuildDate>Thu, 17 Mar 2016 09:56:49 +0200</lastBuildDate>
    <image>
      <url>https://www.kanekotic.com/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>daily</title>
      <link>https://www.kanekotic.com/tag/daily/</link>
    </image>
    
    <item>
      <title>Sonarqube Upgrade Error due LDAP</title>
      <link>https://www.kanekotic.com/post/04-18-sonarqube-update-when-ldapmd/</link>
      <pubDate>Thu, 17 Mar 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/04-18-sonarqube-update-when-ldapmd/</guid>
      <description>&lt;p&gt;While upgrading Sonarqube i am getting the next error message&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An error happened, some parts of the page might not render correctly. Please contact the administrator if you keep on experiencing this error&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you can see the message is not to explicit, in reality it doesnt have anything to do with reality. In my case i had copy as per the instructions the &lt;code&gt;sonar.properties&lt;/code&gt; file. after searching i fouund this discussion 
&lt;a href=&#34;https://groups.google.com/forum/#!topic/sonarqube/clYmLXuz7Nk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The problem at this point became clear, LDAP is a plugin inside Sonarqube. During the upgrade process the plugins must have not been loaded causing an unidentified section in the upgrade.&lt;/p&gt;
&lt;p&gt;The solution is simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Comment the LDAP section.&lt;/li&gt;
&lt;li&gt;Go through the upgrade process of Sonarqube.&lt;/li&gt;
&lt;li&gt;Stop Sonarqube.&lt;/li&gt;
&lt;li&gt;Uncomment LDAP section.&lt;/li&gt;
&lt;li&gt;Start Sonarqube.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu not restarting or turning off</title>
      <link>https://www.kanekotic.com/post/04-17-ubuntu-not-turning-off-or-restartingmd/</link>
      <pubDate>Thu, 17 Mar 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/04-17-ubuntu-not-turning-off-or-restartingmd/</guid>
      <description>&lt;p&gt;Lately I have been getting tired of my operating system just not wanting to reboot or sometimes not turning off. This happens in my version off ubuntu due a problem with the energy management.
The way to solve this is changing the boot parameters for the operating system. So you will need to follow the next steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the grub settings file (if you use nano as at the end do CTRL+O to save CTRL+X to close)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/default/grub
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Eddit the next line to look similar to the next one.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash acpi=force reboot=pci&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Call the command line to update the grub (os selector for operating system)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo update-grub
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;first reboot this will not make any difference but after your first reboot as the computer will boot with the new parameters this should solve the issue.&lt;/p&gt;
&lt;p&gt;Disclaimer: this works in my case, every installation in different hardware than the one in my computer could have different outcomes (that i cannot be held accountable for, so use at your discretion), including  booting issues that you might solve by removing the previous parameters before booting Ubuntu from grub.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unit Test CheatSheet</title>
      <link>https://www.kanekotic.com/post/03-02-unit-test-cheatsheet/</link>
      <pubDate>Wed, 02 Mar 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/03-02-unit-test-cheatsheet/</guid>
      <description>&lt;p&gt;##&lt;strong&gt;mstest&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/microsoft.visualstudio.testtools.unittesting.assert.aspx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;assert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/microsoft.visualstudio.testtools.unittesting.collectionassert.aspx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;collection assert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##&lt;strong&gt;Nunit&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/nunit/docs/wiki/Attributes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/nunit/docs/wiki/Assertions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Assertion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##&lt;strong&gt;MOQ&lt;/strong&gt;
Example&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;public interface IFoo {
   public bool DoSomething(string);
}

int calls;
var mock = new Mock&amp;lt;IFoo&amp;gt;();
mock.Setup(foo =&amp;gt; foo.DoSomething(It.IsAny&amp;lt;string&amp;gt;())).
         Returns((string s) =&amp;gt; s.ToLower())
         .Callback(() =&amp;gt; ++calls);

mock.SetupProperty(f =&amp;gt; f.Name, &amp;quot;foo&amp;quot;);
mock.VerifySet(foo =&amp;gt; foo.Name = &amp;quot;foo&amp;quot;);

mock.Verify(foo =&amp;gt; foo.DoSomething(It.IsAny&amp;lt;string&amp;gt;()), Times.Never());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;##&lt;strong&gt;Test internal Classes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In assembly info to test internal classes you will need to know the name of the file&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cs&#34;&gt;[assembly: InternalsVisibleToAttribute(&amp;quot;&amp;lt;Project Name&amp;gt;&amp;quot;)]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Meteor - FlowRouter</title>
      <link>https://www.kanekotic.com/post/02-05-meteor-flowrouter/</link>
      <pubDate>Fri, 05 Feb 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/02-05-meteor-flowrouter/</guid>
      <description>&lt;p&gt;This package is a very useful to define the navigation on your client side application. To add it just use the next command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;meteor add kadira:flow-router
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;a static route can be done as the next code. Where name needs to be a unique identifier, and the render string has to be the name of the template.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;FlowRouter.route(&#39;/&#39;,
{
  name: &#39;homeId&#39;,
  action(){
    BlazeLayout.render(&#39;homeTemplate&#39;);
  }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in case of requiring a dynamic page. Where the change is just the second objects where you defined the child template.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;FlowRouter.route(&#39;/&#39;,
{
  name: &#39;mainId&#39;,
  action(){
    BlazeLayout.render(&#39;mainTemplate&#39;, {mainTemplate: &#39;dynamicTemplate&#39;});
  }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Other interesting parts of this package is the definition of variables on the route definition (like :id in the next code).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;FlowRouter.route(&#39;/playlist/:id&#39;,
{
  name: &#39;playlist&#39;,
  action(){
    BlazeLayout.render(&#39;main&#39;, {main: &#39;playlist&#39;});
  }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;there is also a possibility to use it in any part of the client javascript code to do redirection by using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;FlowRouter.go(&#39;home&#39;);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>C# - Path.Combine</title>
      <link>https://www.kanekotic.com/post/02-04-csharp-path-combine/</link>
      <pubDate>Thu, 04 Feb 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/02-04-csharp-path-combine/</guid>
      <description>&lt;p&gt;When using path.Combine if the second argument starts with a /. the first path is ignored and will give a path based on the C: drive.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var path = Path.Combine(firstpath,$@&amp;quot;\myfolder\myfile.txt&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will not return &amp;lt;firstpath\myfolder\myfile.txt&amp;gt; will return &amp;lt;C:\\myfolder\myfile.txt&amp;gt;.&lt;/p&gt;
&lt;h2 id=&#34;meteor---session-variables&#34;&gt;&lt;strong&gt;Meteor - Session variables&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Session variables are easy to use in meteor. the can ve get and set from the javascript code using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Session.get(&#39;variableName&#39;);
Session.set(&#39;variableName&#39;, true);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;on your HTML you can reference the get method easily by:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;template name=&amp;quot;admin&amp;quot;&amp;gt;
    {{#if $.Session.get &#39;variableName&#39;}}
        I am here
    {{else}}
        I am not here
    {{/if}}
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Meteor - Session variables</title>
      <link>https://www.kanekotic.com/post/02-04-meteor-session-variables/</link>
      <pubDate>Thu, 04 Feb 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/02-04-meteor-session-variables/</guid>
      <description>&lt;p&gt;Session variables are easy to use in meteor. the can ve get and set from the javascript code using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Session.get(&#39;variableName&#39;);
Session.set(&#39;variableName&#39;, true);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;on your HTML you can reference the get method easily by:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;template name=&amp;quot;admin&amp;quot;&amp;gt;
    {{#if $.Session.get &#39;variableName&#39;}}
        I am here
    {{else}}
        I am not here
    {{/if}}
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Meteor - Query subdocument</title>
      <link>https://www.kanekotic.com/post/02-03-meteor-query-subdocument/</link>
      <pubDate>Wed, 03 Feb 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/02-03-meteor-query-subdocument/</guid>
      <description>&lt;p&gt;To make a query over a subdocument in meteor is not posible to use directly the &amp;lsquo;$&amp;rsquo; or &amp;lsquo;$elemMatch&amp;rsquo; notation. It is necesary to use the keyword &amp;lsquo;fields:&amp;rsquo; to do this. To publish just part of a mongo document you should do a query similar to this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Meteor.publish(&#39;chapter&#39;, function(id, name){
  check(id,String);
  check(name,String);
  return Playlists.find({ _id: id }, { fields: { chapters: { $elemMatch: { name: name }}}});
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That from the original document:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;_id&amp;quot;: &amp;quot;cx8cmw5KMjHQm8czw&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;Test&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;this is a test&amp;quot;,
  &amp;quot;chapters&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;First chapter&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;this is a video about blah blah blah&amp;quot;,
      &amp;quot;video&amp;quot;: {
        &amp;quot;youtube&amp;quot;: &amp;quot;yoAFDy1WS94&amp;quot;
      }
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;Second chapter&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;this is a video about blah blah blah&amp;quot;,
      &amp;quot;video&amp;quot;: {
        &amp;quot;youtube&amp;quot;: &amp;quot;yoAFDy1WS94&amp;quot;
      }
    }
  ],
  &amp;quot;createdAt&amp;quot;: &amp;quot;2016-02-03T07:18:52.371Z&amp;quot;,
  &amp;quot;isPublic&amp;quot;: false
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will return:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;_id&amp;quot;: &amp;quot;cx8cmw5KMjHQm8czw&amp;quot;,
  &amp;quot;chapters&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;First chapter&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;this is a video about blah blah blah&amp;quot;,
      &amp;quot;video&amp;quot;: {
        &amp;quot;youtube&amp;quot;: &amp;quot;ldkfkfkdlfjdkf&amp;quot;
      }
    }
  ]
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is useful if you have big documents or don&amp;rsquo;t want the complexity of having 2 different collections that need to be related. It will help with the performance and resources that your application uses.&lt;/p&gt;
&lt;p&gt;now if you want to use the sub-document in your UI, you should just subscribe and add a helper to access this array item, like for example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Template.chapter.onCreated(function(){
  var self = this;
  self.autorun(function(){
    var id = FlowRouter.getParam(&#39;id&#39;);
    var name = FlowRouter.getParam(&#39;name&#39;);
    self.subscribe(&#39;chapter&#39;, id, name);
  });
});

Template.chapter.helpers({
  chapter: () =&amp;gt; {
      return Playlists.findOne({}).chapters[0];
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally your HTML just needs to reference the helper defined to show the information&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;template name=&amp;quot;chapter&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;chapter-body&amp;quot;&amp;gt;
        &amp;lt;h3&amp;gt;{{ chapter.name }}&amp;lt;/h3&amp;gt;
        &amp;lt;iframe width=&amp;quot;560&amp;quot; height=&amp;quot;315&amp;quot; class=&amp;quot;video&amp;quot;
          src=&amp;quot;https://www.youtube.com/embed/{{ chapter.video.youtube }}&amp;quot;
          frameborder=&amp;quot;0&amp;quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
        {{ #markdown }}{{ chapter.description }}{{ /markdown }}
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>TFS 2015 - vnext and sonarqube integration</title>
      <link>https://www.kanekotic.com/post/02-01-vnext-sonarqube-integration/</link>
      <pubDate>Mon, 01 Feb 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/02-01-vnext-sonarqube-integration/</guid>
      <description>&lt;p&gt;The modifications required to use the integrated sonarqube steps are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On your administration panel add a new Generic Endpoint with the connection name you decide and the sonarqube server address.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.kanekotic.com/img/post/sonarqube1.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Configure the start step as per the next image
&lt;ul&gt;
&lt;li&gt;select the endpoint configured before&lt;/li&gt;
&lt;li&gt;Add the project parameters:
&lt;ul&gt;
&lt;li&gt;key (this is an unique identifier).&lt;/li&gt;
&lt;li&gt;Name (display name for your software).&lt;/li&gt;
&lt;li&gt;Version (related software version).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.kanekotic.com/img/post/sonarqube2.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C# - Paths to system folders</title>
      <link>https://www.kanekotic.com/post/01-29-csharp-path-to-system-folders/</link>
      <pubDate>Fri, 29 Jan 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/01-29-csharp-path-to-system-folders/</guid>
      <description>&lt;p&gt;In the Environment class there is a property called SpecialFolder. This will provide the paths to folders like: Program files, desktop, AppData, etc. The use is the next one:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Environment.SpecialFolder.&amp;lt;NameSpecialFolder&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where &lt;NameSpecialFolder&gt; is the given name of the folder required, for example the AppData Local folder will be&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Environment.SpecialFolder.LocalApplicationData
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>C# - Paths to system folders</title>
      <link>https://www.kanekotic.com/post/01-29-git-branches-tags-and-commits/</link>
      <pubDate>Fri, 29 Jan 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/01-29-git-branches-tags-and-commits/</guid>
      <description>&lt;p&gt;##&lt;strong&gt;GIT - Branches, Tags and Commits&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I was concern what will happend with my comments in the case i remove a branch.&lt;/p&gt;
&lt;p&gt;In git Commits are independents of branch&amp;rsquo;s and Tag&amp;rsquo;s. This last two are just pointers to certain commit. Trying to delete a Branch could create unreachable commits but if this are tag they become reachable.&lt;/p&gt;
&lt;p&gt;Removing branches will not remove commits, they will just become unreachable. Unless they are deleted with the git-gc command for example.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C# - Extension methods overlap with linq</title>
      <link>https://www.kanekotic.com/post/01-28-extension-methods-overlap-with-linq/</link>
      <pubDate>Thu, 28 Jan 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/01-28-extension-methods-overlap-with-linq/</guid>
      <description>&lt;p&gt;I have hit a corner case of extension methods and LINQ. Today I was declaring some extension methods to make my code more readable.So I created an extension method that gets an object and performs a direct cast:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public static class GeneralExtensions
{
    public static T Cast&amp;lt;T&amp;gt;(this object o)
    {
    	return (T)o;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The intention was to be able to call my direct castings by something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;MyObject.CastTo&amp;lt;MyInterface&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It happens that in the same namespace I have an extension method that has a LINQ expression&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using System;
using System.Collections.Generic;
using System.Linq;

public static class EnumExtenstions
{
	public static IEnumerable&amp;lt;string&amp;gt; UseLinq(this IEnumerable&amp;lt;object&amp;gt; collection)
	{
		return (from object value in collection select value.ToString() ).ToList();
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Adding this first extension method to my code base cause the next error&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error	CS1936	Could not find an implementation of the query pattern for source type &#39;object&#39;.  &#39;Select&#39; not found.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having both extension methods in different namespaces (and not referred), or rename &lt;code&gt;Cast&amp;lt;T&amp;gt;&lt;/code&gt; to something different solves the issue. This is caused for an overlap of the extension methods where the nearest one to the code is the one called.&lt;/p&gt;
&lt;p&gt;##&lt;strong&gt;How bad Extension Methods over object could go?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is an extract from the answer of Eric Lippert, regarding the code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public static class GeneralExtensions
{
    public static T Cast&amp;lt;T&amp;gt;(this object o)
    {
    	return (T)o;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Side Effects of the &lt;code&gt;cast&amp;lt;T&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cast&amp;lt;int&amp;gt;(123)&lt;/code&gt; unnecessarily boxes the int, &lt;code&gt;(int)123&lt;/code&gt; does not.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cast&amp;lt; short &amp;gt;(123)&lt;/code&gt; fails but &lt;code&gt;(short)123&lt;/code&gt; succeeds. There is no conversion from a boxed int to a short.&lt;/li&gt;
&lt;li&gt;Suppose you have a user-defined conversion from Animal to Shape. &lt;code&gt;Cast&amp;lt;Shape&amp;gt;(new Tiger())&lt;/code&gt; fails but &lt;code&gt;(Shape) new Tiger()&lt;/code&gt; succeeds.&lt;/li&gt;
&lt;li&gt;Suppose q is a nullable int that happens to be null. &lt;code&gt;Cast&amp;lt;string&amp;gt;(q)&lt;/code&gt; succeeds! But &lt;code&gt;(string)q&lt;/code&gt; would fail at compile time&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cast method has some overlap with the real cast operator but is not a substitute for it. To capture the semantics of the cast operator there is a need to use dynamic, which starts the compiler at runtime and does the compile time analysis on runtime types.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C# - Fluent Interfaces with Extension Methods</title>
      <link>https://www.kanekotic.com/post/01-27-interface-with-extension-methods/</link>
      <pubDate>Wed, 27 Jan 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/01-27-interface-with-extension-methods/</guid>
      <description>&lt;p&gt;I have not experiment to much with fluent interfaces. But is something cool especially to make code that is expressive.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public struct Coordenates
    {
        public double X { get; set; }
        public double Y { get; set; }
        public double Z { get; set; }
    }

    public static class CoordenatesExtensions
    {

        public static Coordenates X(this Coordenates coordenates, double value)
        {
            coordenates.X = value;
            return coordenates;
        }

        public static Coordenates Y(this Coordenates coordenates, double value)
        {
            coordenates.Y = value;
            return coordenates;
        }
        public static Coordenates Z(this Coordenates coordenates, double value)
        {
            coordenates.Z = value;
            return coordenates;
        }
    }

    public class Points
    {
        private Coordenates point;
        public Points()
        {
            point = new Coordenates().X(2.1).Y(2.4).Z(3.2);
        }
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;also can be used with some language properties to make it more expressive&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public static class GeneralExtensions
{
    public static T As&amp;lt;T&amp;gt;(this object o) where T : class
    {
        return o as T;
    }

    public static T Cast&amp;lt;T&amp;gt;(this object o)
    {
        return (T)o;
    }

    public static bool Is&amp;lt;T&amp;gt;(this object o)
    {
        return o is T;
    }
}

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Meteor the beginning</title>
      <link>https://www.kanekotic.com/post/01-27-meteor-the-beginning/</link>
      <pubDate>Wed, 27 Jan 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/01-27-meteor-the-beginning/</guid>
      <description>&lt;p&gt;##&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I found a lot of interesting things in this link, i can setup my view model to a real JavaScript object.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://viewmodel.meteor.com/docs&#34;&gt;https://viewmodel.meteor.com/docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To add markdown support you will have to add the markdown package:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;meteor add markdown
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you also want your snippets of code to have some style you will also need to add the highlight.js package:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;meteor add simple:highlight.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;##&lt;strong&gt;AutoForm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;to get a multi-line input you need to make sure you get a textarea. This can be done in the collection definition by:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;TestSchema = new SimpleSchema({
    content: {
        type: String,
        label: &amp;quot;Content&amp;quot;,
        autoform: {
            rows: 10
        }
    }
});
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Coding - C# - Complex Constructors</title>
      <link>https://www.kanekotic.com/post/01-26-c-sharp-complex-constructors/</link>
      <pubDate>Tue, 26 Jan 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/01-26-c-sharp-complex-constructors/</guid>
      <description>&lt;p&gt;When doing complex objects using an object to help the building is welcome.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class Complex
{
    double x;
    double y;
    double z;

    float height;
    float width;

    string foreground;
    string background;

    public Complex()
    {
        x = 1.456;
        y = 1.234;
        z = 1.789;

        height = 10.12;
        width = 10.14;

        foreground = &amp;quot;#FFF&amp;quot;;
        background = &amp;quot;#FA1&amp;quot;;
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this way you remove some complexity of just adding steps in your constructor to something more abstract and can contain the logic.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;public class Complex
{
    public double X { get; set; }
    public double Y { get; set; }
    public double Z { get; set; }

    public double Height { get; set; }
    public double Width { get; set; }

    public string Foreground { get; set; }
    public string Background { get; set; }

    public Complex(ComplexBuildHelper buildHelper)
    {
        buildHelper.Construct(this);
    }

}

public class ComplexBuildHelper
{
    public void Construct(Complex reference)
    {
        BuildPosition(reference);
        BuildDimension(reference);
        BuildCharacteristics(reference);
    }

    private void BuildPosition(Complex reference)
    {
        reference.X = 1.456;
        reference.Y = 1.234;
        reference.Z = 1.789;
    }

    private void BuildDimension(Complex reference)
    {
        reference.Height = 10.12;
        reference.Width = 10.14;
    }

    private void BuildCharacteristics(Complex reference)
    {
        reference.Foreground = &amp;quot;#FFF&amp;quot;;
        reference.Background = &amp;quot;#FA1&amp;quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Gitbook - The beginning</title>
      <link>https://www.kanekotic.com/post/01-26-gitbook-the-beginning/</link>
      <pubDate>Tue, 26 Jan 2016 09:56:49 +0200</pubDate>
      <guid>https://www.kanekotic.com/post/01-26-gitbook-the-beginning/</guid>
      <description>&lt;p&gt;So i have started writing using GitBook, to take notes of what i learn every day. a few things have shown up.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There are some required files if you start from a GitHub repository that you will have to create:
&lt;ul&gt;
&lt;li&gt;README.md&lt;/li&gt;
&lt;li&gt;SUMMARY.md&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Markdown is partially working as per escape characters don&amp;rsquo;t work with # and numbering and listing get confused if they are.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
