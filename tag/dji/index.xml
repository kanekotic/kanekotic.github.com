<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dji | Academic</title>
    <link>https://www.kanekotic.com/tag/dji/</link>
      <atom:link href="https://www.kanekotic.com/tag/dji/index.xml" rel="self" type="application/rss+xml" />
    <description>dji</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><lastBuildDate>Tue, 27 Feb 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://www.kanekotic.com/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>dji</title>
      <link>https://www.kanekotic.com/tag/dji/</link>
    </image>
    
    <item>
      <title>tellojs</title>
      <link>https://www.kanekotic.com/project/tellojs/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://www.kanekotic.com/project/tellojs/</guid>
      <description>&lt;h1 id=&#34;logomakr_123ujkhttpsuser-imagesgithubusercontentcom307120849430616-cddbc300-f7ab-11e8-9356-381c730d0839png&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3071208/49430616-cddbc300-f7ab-11e8-9356-381c730d0839.png&#34; alt=&#34;logomakr_123ujk&#34;&gt;&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://travis-ci.org/kanekotic/tellojs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://travis-ci.org/kanekotic/tellojs.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;

&lt;a href=&#34;https://coveralls.io/github/kanekotic/tellojs?branch=master&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/kanekotic/tellojs/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;

&lt;a href=&#34;https://github.com/kanekotic/tellojs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/tellojs.svg&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;

&lt;a href=&#34;https://github.com/kanekotic/tellojs/blob/master/LICENSE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/kanekotic/tellojs.svg&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;

&lt;a href=&#34;https://GitHub.com/kanekotic/tellojs/graphs/commit-activity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Maintained%3F-yes-green.svg&#34; alt=&#34;Maintenance&#34;&gt;&lt;/a&gt;

&lt;a href=&#34;https://www.paypal.me/kanekotic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-blue.svg&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;Provide an async promise based unofficial sdk for the tello drone based on the official 
&lt;a href=&#34;https://dl-cdn.ryzerobotics.com/downloads/tello/20180910/Tello%20SDK%20Documentation%20EN_1.3.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;add it to your project using &lt;code&gt;npm install tellojs --save&lt;/code&gt; or &lt;code&gt;yarn add tellojs&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;this sdk provide functions when you import for the next capabilities:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const sdk = require(&#39;tellojs&#39;)

const x = number,
    y = number,
    z = number,
    speed = number,
    start = {x, y, z},
    end = {x, y, z}

//CONTROL COMMANDS
await sdk.control.connect()                     // Enter SDK mode.
await sdk.control.takeoff()                     // Auto takeoff.
await sdk.control.land()                        // Auto landing.
await sdk.control.emergency()                   // Stop motors immediately
await sdk.control.stop()                        // Hovers in the air
await sdk.control.move.up(x)                    // Ascend to “x” cm.
await sdk.control.move.down(x)                  // Descend to “x” cm.
await sdk.control.move.left(x)                  // move left to “x” cm.
await sdk.control.move.right(x)                 // move right to “x” cm.
await sdk.control.move.front(x)                 // move forward to “x” cm.
await sdk.control.move.back(x)                  // move backwards to “x” cm.
await sdk.control.move.go(end, speed )          //  fly to x y z in speed (cm/s)
await sdk.control.move.curve(start, end, speed) //  fly to x y z in speed (cm/s)
await sdk.control.rotate.clockwise(x)           // rotate clockwise &#39;x&#39; degrees.
await sdk.control.rotate.counterClockwise(x)    // rotate counter clockwise &#39;x&#39; degrees.
await sdk.control.flip.left()                   // Flip to the left.
await sdk.control.flip.right()                  // Flip to the right.
await sdk.control.flip.back()                   // Flip in backward.
await sdk.control.flip.front()                  // Flip in forward.

//SET COMMANDS
await sdk.set.speed(x)                          // set speed to x cm/s
await sdk.set.rc(x, y, z, yaw)                  // Send RC control via four channels.
await sdk.set.wifi(ssid, password)              // Set Wi-Fi with SSID password

//READ COMMANDS
await sdk.read.speed()                          // Obtain current speed (cm/s).
await sdk.read.battery()                        // Obtain current battery percentage.
await sdk.read.time()                           // Obtain current flight time.
await sdk.read.height()                         // Obtain get height (cm)
await sdk.read.temperature()                    // Obtain temperature (°C)
await sdk.read.attitude()                       // Obtain IMU attitude data
await sdk.read.barometer()                      // Obtain barometer value (m)
await sdk.read.tof()                            // Obtain distance value from TOF（cm）
await sdk.read.acceleration()                   // Obtain IMU angular acceleration data (0.001g)
await sdk.read.wifi()                           // Obtain Wi-Fi SNR.
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;web-graphic-by-a-hrefhttpwwwflaticoncomauthorspicolpicola-from-a-hrefhttpwwwflaticoncomflaticona-is-licensed-under-a-hrefhttpcreativecommonsorglicensesby30-titlecreative-commons-by-30cc-by-30a-check-out-the-new-logo-that-i-created-on-a-hrefhttplogomakrcom-titlelogo-makrlogomakrcoma-httpslogomakrcom09u4zz&#34;&gt;Web graphic by &lt;a href=&#34;http://www.flaticon.com/authors/picol&#34;&gt;picol&lt;/a&gt; from &lt;a href=&#34;http://www.flaticon.com/&#34;&gt;Flaticon&lt;/a&gt; is licensed under &lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34; title=&#34;Creative Commons BY 3.0&#34;&gt;CC BY 3.0&lt;/a&gt;. Check out the new logo that I created on &lt;a href=&#34;http://logomakr.com&#34; title=&#34;Logo Makr&#34;&gt;LogoMakr.com&lt;/a&gt; &lt;a href=&#34;https://logomakr.com/09u4Zz&#34;&gt;https://logomakr.com/09u4Zz&lt;/a&gt;&lt;/h5&gt;
</description>
    </item>
    
  </channel>
</rss>
